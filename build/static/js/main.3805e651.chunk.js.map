{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","list","remove_item","edit_item","className","map","item","id","title","key","onClick","Alert","type","msg","remove_alert","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","set_name","localStorage","getItem","JSON","parse","get_local_storage","set_list","is_editing","set_is_editing","edit_id","set_edit_id","show","alert","set_alert","show_alert","setItem","stringify","onSubmit","e","preventDefault","new_item","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specific_item","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3805e651.chunk.js","sourcesContent":["import React from 'react'\nimport { FaEdit, FaTrash } from 'react-icons/fa'\nconst List = ({ list, remove_item, edit_item }) => {\n  return (\n    <div className=\"grocery-list\">\n      {list.map(item => {\n        const { id, title } = item;\n        return (\n          <article key={id} className='grocery-item'>\n            <p className=\"btn-container\">{title}</p>\n            <div className=\"btn-container\">\n              <button className=\"edit-btn\" onClick={() => edit_item(id)}>\n                <FaEdit />\n              </button>\n              <button className=\"delete-btn\" onClick={() => remove_item(id)}>\n                <FaTrash />\n              </button>\n            </div>\n          </article>)\n      })}\n    </div>\n  )\n}\n\nexport default List\n","import React, { useEffect } from 'react'\n\nconst Alert = ({ type, msg, remove_alert, list }) => {\n  \n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      remove_alert()\n    }, 3000);\n\n    // clean up function\n    return () => clearTimeout(timeout);\n  }, [list])\n\n  return (\n    <p className={`alert alert-${type}`}>{msg}</p>\n  )\n}\n\nexport default Alert\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst get_local_storage = () => {\n  let list = localStorage.getItem('list');\n\n  if (list) {\n    return JSON.parse(list)\n  }\n  else {\n    return [];\n  }\n\n}\n\nfunction App() {\n  const [name, set_name] = useState('')\n  const [list, set_list] = useState(get_local_storage());\n  const [is_editing, set_is_editing] = useState(false);\n  const [edit_id, set_edit_id] = useState(null);\n  const [alert, set_alert] = useState({ show: false, msg: '', type: '' })\n\n  const handle_submit = (e) => {\n    e.preventDefault();\n\n    // when name is empty\n    if (!name) {\n      // set_alert\n      show_alert(true, 'danger', 'please enter value');\n    }\n\n    // deal with edit\n    else if (name && is_editing) {\n      set_list(list.map((item) => {\n        if (item.id === edit_id) {\n          return {\n            ...item,\n            title: name\n          }\n        }\n        return item;\n      }))\n\n      set_name('');\n      set_edit_id(null);\n      set_is_editing(false);\n      show_alert(true, 'success', 'value changed')\n    }\n\n    // deal with add new\n    else {\n      show_alert(true, 'success', 'item added to the list')\n      const new_item = {\n        id: new Date().getTime().toString(),\n        title: name\n      }\n      set_list([...list, new_item])\n      set_name('')\n    }\n  }\n\n  const show_alert = (show = false, type = '', msg = '') => {\n    set_alert({ show, type, msg })\n  }\n\n  const clear_list = () => {\n    show_alert(true, 'danger', 'empty list');\n    set_list([])\n  }\n\n  const remove_item = (id) => {\n    show_alert(true, 'danger', 'item removed');\n    set_list(list.filter((item) => item.id !== id))\n  }\n\n  const edit_item = (id) => {\n    const specific_item = list.find((item) => item.id === id);\n    set_is_editing(true);\n    set_edit_id(id);\n    set_name(specific_item.title)\n  }\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list))\n  }, [list])\n\n  return (\n    <section className=\"section-center\">\n      <form className=\"grocery-form\" onSubmit={handle_submit}>\n        {alert.show && <Alert {...alert} remove_alert={show_alert} list={list} />}\n        <h3>grocery Bud</h3>\n        <div className=\"form-control\">\n          <input className='grocery' type=\"text\" placeholder=\"e.g. maggie\" value={name} onChange={(e) => set_name(e.target.value)} />\n          <button type=\"submit\" className=\"submit-btn\">\n            {is_editing ? 'edit' : 'submit'}\n          </button>\n        </div>\n      </form>\n\n      {list.length > 0 && (\n        <div className=\"grocery-container\">\n          <List list={list} remove_item={remove_item} edit_item={edit_item} />\n          <button className=\"clear-btn\" onClick={clear_list}>\n            clear items\n          </button>\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}